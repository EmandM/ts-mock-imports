name: Publish Packages
on:
  release:
    types:
      - prereleased
      - released  # prd

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      do_dry_run: ${{ steps.variables.outputs.is_dry_run }}
      environment: ${{ steps.variables.outputs.env }}
      npm_package_version: ${{ steps.variables.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - id: variables
        run: echo "version=$(npm pkg get version | sed 's/"//g')" >> $GITHUB_OUTPUT
      - run: echo "Creating release for ts-mock-imports at version ${{ steps.variables.outputs.version }}"

  publish-npm:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run compile
      # Publish to npm
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_NPM_TOKEN }}

  publish-gpr:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.verify.outputs.do_dry_run }}
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          registry-url: https://npm.pkg.github.com/
          scope: '@emandm'
      # Publish to GitHub Packages
      - run: npm ci
      - run: npm run compile

      - name: Update Package Name
        run: |
          sed -i 's,"name": "ts-mock-imports","name": "@emandm/ts-mock-imports",' package.json
          cat package.json

      - run: echo registry=https://npm.pkg.github.com/emandm >> .npmrc
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  external_test:
    runs-on: ubuntu-latest
    needs: [setup, publish-npm]
    steps:
      - uses: actions/setup-node@v4
      - uses: actions/checkout@v4
        with:
          repository: EmandM/import-test

      - run: npm ci
      - run: npm uninstall ts-mock-imports # Ensure no contamination from existing version
      - run: npm install ts-mock-imports@${{ needs.setup.outputs.npm_package_version }}
      - run: npm test
